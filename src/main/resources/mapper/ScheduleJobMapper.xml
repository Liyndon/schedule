<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.schedule.dao.mapper.ScheduleJobMapper">
    <resultMap id="result" type="com.schedule.dao.domain.ScheduleJob">
        <result column="id" property="id"/>
        <result column="task_id" property="taskId"/>
        <result column="submit_group" property="submitGroup"/>
        <result column="tracker_group" property="trackerGroup"/>
        <result column="ext_params" property="extParams"/>
        <result column="cron_expression" property="cronExpression"/>
        <result column="gmt_trigger" property="gmtTrigger"/>
        <result column="retry_times" property="retryTimes"/>
        <result column="gmt_create" property="gmtCreate"/>
        <result column="gmt_modify" property="gmtModify"/>
    </resultMap>

    <insert id="insert" parameterType="com.schedule.dao.domain.ScheduleJob"
            keyProperty="id" useGeneratedKeys="true">
        INSERT INTO scheduler_job(task_id, submit_group,tracker_group,ext_params,max_retry_times,cron_expression,gmt_trigger,gmt_create)
        VALUES(#{taskId},#{submitGroup},#{trackerGroup},#{extParams},#{maxRetryTimes},#{cronExpression},#{gmtTrigger},now())
    </insert>

    <select id="get" resultMap="result">
        select * from scheduler_job where task_id=#{taskId} and submit_group=#{submitGroup} limit 1
    </select>

    <select id="getById" resultMap="result">
        select * from scheduler_job where id=#{id} limit 1
    </select>

    <select id="getUndoneTriggerJob" resultMap="result">
        select * from scheduler_job
        where gmt_trigger != 0 and retry_times = 0
        and TIMESTAMPDIFF(SECOND,FROM_UNIXTIME(gmt_trigger/1000),now())>10
        limit 10;
    </select>

    <delete id="deleteJob">
        delete from scheduler_job
        where gmt_trigger != 0 and retry_times != 0
        and (gmt_trigger BETWEEN unix_timestamp(DATE_SUB(now(),INTERVAL 8 DAY))*1000
        and unix_timestamp(DATE_SUB(now(),INTERVAL 7 DAY))*1000)
        limit 1000;
    </delete>

    <delete id="delete">
        delete from scheduler_job where task_id=#{taskId} limit 1
    </delete>

    <update id="update">
        update scheduler_job set retry_times=#{retryTimes},gmt_modify=now() where task_id=#{taskId}
    </update>

    <insert id="insertHistory" parameterType="com.schedule.dao.domain.ScheduleJobHistory"
            keyProperty="id" useGeneratedKeys="true">
        INSERT INTO scheduler_job_history(task_id, status,result,elapsed_time,gmt_trigger)
        VALUES(#{taskId},#{status},#{result},#{elapsedTime},now())
    </insert>

    <select id="countHistory" resultType="int">
        select count(*) from scheduler_job_history where task_id=#{taskId}
    </select>
</mapper>